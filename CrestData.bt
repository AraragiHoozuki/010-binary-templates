//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: CrestData.bin / 15.bin
//   Authors: DeathChaos
//   Version: 1.00
//   Purpose: Three Houses character file mapping
//   History
//   1.00    2019-09-11  DeathChaos - started this
//------------------------------------------------

//---------------------------------------------
// Includes
//---------------------------------------------
#include "3H_Enums.bt"

LittleEndian();
local int i<hidden=true>;
local int StringStart<hidden=true> = 0xFAC;

enum<ubyte> CrestEffects
{
	Raise_Might = 0x18,
	Heal_30Percent_HP = 0x32,
	Negate_counter = 0x60,
	Conserve_uses = 0x61,
	Double_Atk_and_Uses = 0x62,
	Strike_twice = 0x63,
	Crest_of_Flames_Effects = 0x64
};

struct File{
	struct SectionPointers{
		uint32 NumOfSections;
		uint32 UnkPointer<bgcolor=cDkPurple>;
		uint32 UnkTotalSize<bgcolor=cDkPurple>;
		uint32 CrestDataPointer<bgcolor=cDkGreen>;
		uint32 CrestDataTotalSize<bgcolor=cDkGreen>;
	}sectionpointers<name="Section Pointers">;
	
	FSeek(sectionpointers.UnkPointer);
	struct UnkStructure{
		uint32 Unk_Magic;
		uint32 numUnk;
		uint32 SizeOfUnkBlock;
		struct UnkHeaderPadding{
			byte Padding[0x34];
		}unkheaderpadding<name="Padding">;
		struct UnkStruct{
		ubyte unk;
		ubyte unk;
		ubyte unk;
		ubyte unk;
		ubyte unk;
		ubyte unk;
		ubyte unk;
		ubyte unk;
		ubyte unk;
		ubyte unk;
		ubyte unk;
		ubyte unk;
		ubyte unk;
		ubyte unk;
		ubyte unk;
		}unkstruct[numUnk];
	}unkstructure<name="Unknown Section">;
	
	FSeek(sectionpointers.CrestDataPointer);
	struct CrestDataStructure{
		uint32 CrestData_Magic;
		uint32 numCrestData;
		uint32 SizeOfCrestDataBlock;
		struct CrestDataHeaderPadding{
			byte Padding[0x34];
		}crestdataheaderpadding<name="Padding">;
		struct CrestsStruct{
			for( i = 0; i < numCrestData; i++ )
			{
				struct CrestData{
					local Crests NameOfCrest<hidden=true>;
					NameOfCrest = i;
					uint32 BtlEfctPointer<name="Battle Effect Pointer">;
					local string BattleEffectParticle<name="Battle Effect">;
					BattleEffectParticle = ReadString(StringStart+BtlEfctPointer);
					CrestEffects effect<name="Crest Effects">;
					struct TriggerCondition{
						ubyte bit0 : 1<name="Phys Weapon">;
						ubyte bit1 : 1<name="Magic Attack">;
						ubyte bit2 : 1<name="Combat Art">;
						ubyte bit3 : 1<name="White Magic">;
						ubyte bit4 : 4<name="Reserve">;
					}triggercondition<name="Crest Trigger Conditions">;
					ubyte MajorRate<name="Activation Rate as Major Crest">;
					ubyte MinorRate<name="Activation Rate as Minor Crest">;
					ubyte ItemRate<name="Activation Rate as NG+ Item Crest">;
					uint16 unknown<name="Unknown">;
					ubyte unknown<name="Unknown">;
				}crestdata<name="Crest Data", read=ReadName>;
			}
		}crestsstruct<name="Crests">;
	}crestdatastructure<name="Crest Data Section">;
}file<name="15_CrestData">;

string ReadName(CrestData &p)
{
return EnumToString(p.NameOfCrest);
}