//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: event/talk_event/script (6341-7437)
//   Authors: Sloth
//   Version: Beta
//   Purpose: Read event scripts
//------------------------------------------------
#include "Enum/Event_Enums.bt"

LittleEndian();

struct Header{
    uint32 NumberOfEvents<name="Number of Events">;
    uint32 Unknown;
    uint32 Unknown;
    uint32 Unknown;
}header<bgcolor=cGreen, name="Header">;

struct Cube_Scenes{
    Cube Magic<hidden=true>;
    Cube Cube1<name="Cube Scene">;
    Cube Cube2<name="Cube Scene">;
    Cube Cube3<name="Cube Scene">;
    Cube Cube4<name="Cube Scene">;
    Cube Cube5<name="Cube Scene">;
    Cube Cube6<name="Cube Scene">;
    Cube Cube7<name="Cube Scene">;
    Cube Cube8<name="Cube Scene">;
    Cube Cube9<name="Cube Scene">;
    Cube Cube10<name="Cube Scene">;
    Cube Cube11<name="Cube Scene">;
}cube_scenes<bgcolor=cRed, name="Cube Scene">;

int magic<hidden=true>;

local int checkLoop = true;
local int eventCall = magic;

while(checkLoop == true)
{
switch(eventCall)
{
    case (0x72):
    {
        struct Something{
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
        }something<name="Unknown">;
    break;
    }
    case (0x92):
    {
        struct SomethingElse{
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
        }somethingElse<name="Unknown">;
    break;
    }
    case (0x70):
    {
        struct Card{
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
            int Unknown;
        }card<name="Card">;
    break;
    }
    default: 
    {
        struct Characters{
        
            Character Character1<bgcolor=cYellow, name="Character", comment="If a support event, this is a support partner">;
            Character Character2<bgcolor=cYellow, name="Character", comment="If a support event, this is a support partner">;
            Character Character3<bgcolor=cYellow, name="Character">;
            Character Character4<bgcolor=cYellow, name="Character">;
            Character Character5<bgcolor=cYellow, name="Character">;
            Character Character6<bgcolor=cYellow, name="Character">;
            Character Character7<bgcolor=cYellow, name="Character">;
            Character Character8<bgcolor=cYellow, name="Character">;
            Character Character9<bgcolor=cYellow, name="Character">;
            Character Character10<bgcolor=cYellow, name="Character">;
            Character Character11<bgcolor=cYellow, name="Character">;
        }characters<bgcolor=cRed, name="Characters">;
    break;
    }
}
if(eventCall == 0x1)
    checkLoop = false;
int newMagic<hidden=true>;
eventCall = newMagic;
}
struct SomethingElse2{
    int Unknown;
    int Unknown;
    int Unknown;
    int Unknown;
    int Unknown;
    int Unknown;
    int Unknown;
    int Unknown;
    int Unknown;
    int Unknown;
    int Unknown;
}somethingElse2<name="Unknown">;

struct Scenes{
    Character Magic<hidden=true>;
    Character Character2<bgcolor=cYellow, name="Character">;
    Character Character3<bgcolor=cYellow, name="Character">;
    Character Character4<bgcolor=cYellow, name="Character">;
    Character Character5<bgcolor=cYellow, name="Character">;
    Character Character6<bgcolor=cYellow, name="Character">;
    Character Character7<bgcolor=cYellow, name="Character">;
    Character Character8<bgcolor=cYellow, name="Character">;
    Character Character9<bgcolor=cYellow, name="Character">;
    Character Character10<bgcolor=cYellow, name="Character">;
    Character Character11<bgcolor=cYellow, name="Character">;
}scenes<name="Scene">;
